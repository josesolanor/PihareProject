@model IEnumerable<WebPihare.Entities.Visitregistration>

@{
    ViewData["Title"] = "Index";
}

<style>
    .chat {
        list-style: none;
        margin: 0;
        padding: 0;
    }

        .chat li {
            margin-bottom: 10px;
            padding-bottom: 5px;
            border-bottom: 1px dotted #B3A9A9;
        }

            .chat li .chat-body p {
                margin: 0;
                color: #777777;
            }

        .panel .slidedown .glyphicon, .chat .glyphicon {
            margin-right: 5px;
        }

    .panel-body {
        overflow-y: scroll;
        height: 250px;
    }

    ::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        background-color: #F5F5F5;
    }

    ::-webkit-scrollbar {
        width: 12px;
        background-color: #F5F5F5;
    }

    ::-webkit-scrollbar-thumb {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
        background-color: #555;
    }
</style>

<h2>Mis Visitas</h2>

<div class="demo-container">
    <div id="gridContainer"></div>
</div>

<div id="ChatModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Mensajes</h4>
            </div>
            <div class="panel-body">
                <ul class="chat" id="chatBody">
                    <li class="left clearfix">
                    </li>
                </ul>
            </div>
            <input id="visitChatSeletedId" hidden value="0">
            <div class="panel-footer">
                <div class="input-group">
                    <input id="btn_input" type="text" class="form-control input-sm" placeholder="Escribe tu mensaje aqui..." />
                    <span class="input-group-btn">
                        <button class="btn btn-warning btn-sm" id="btn_chat">
                            Enviar
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    var connection = new signalR.HubConnectionBuilder().withUrl("/demo/chatHub").build();

    connection.on("Message", function () {
        chatModalSignalr();
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("UpdateVisitGrid", function () {
        getDataGridSource();
    });


    $(function () {
        getDataGridSource();
    });

    function getDataGridSource() {

        $.ajax({
            url: '@Url.Action("MyLoadGrid", "Visitregistrations")',
            type: "GET"
        }).done(function (response) {

            var datasource = JSON.parse(response);

            $(function () {
                $("#gridContainer").dxDataGrid({
                    dataSource: datasource,
                    allowColumnReordering: true,
                    allowColumnResizing: true,
                    columnAutoWidth: true,
                    showColumnLines: true,
                    showRowLines: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    columnChooser: {
                        enabled: true
                    },
                    filterRow: {
                        visible: true,
                    },
                    headerFilter: { visible: true },
                    paging: {
                        pageSize: 10
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [10, 25, 50, 100]
                    },
                    selection: {
                        mode: "single"
                    },
                    grouping: {
                        autoExpandAll: true
                    },
                    headerFilter: {
                        visible: true
                    },
                    groupPanel: {
                        visible: true
                    },
                    "export": {
                        enabled: true,
                        fileName: "RegistroVisitas" + Date.now(),
                        allowExportSelectedData: true
                    },
                    columns: [
                        {
                            dataField: "VisitRegistrationId",
                            visible: false
                        },
                        {
                            dataField: "ClientId",
                            visible: false
                        },
                        {
                            dataField: "DepartmentId",
                            visible: false
                        },
                        {
                            dataField: "CommisionerId",
                            visible: false
                        },

                        {
                            dataField: "VisitDay",
                            caption: 'Fecha de Visita',
                            dataType: "date",
                            format: 'dd/MM/yyyy HH:mm:ss'
                        },
                        {
                            dataField: "DepartmentCode",
                            caption: 'Dpto.'
                        },
                        {
                            dataField: "FullNameClient",
                            caption: 'Nombre Cliente'
                        },
                        {
                            dataField: "FullNameCommisioner",
                            caption: 'Nombre Comisionista'
                        },
                        {
                            dataField: "Observations",
                            caption: 'Observación',
                            width: 250
                        },
                        {
                            dataField: "State",
                            caption: 'Estado'
                        },
                        {
                            dataField: "NotificationStateCommisioner",
                            visible: false
                        },
                        {
                            dataField: "Acciones",
                            caption: 'Acciones',
                            cellTemplate: function (container, options) {
                                var wrapper = $("<center>");
                                console.log(options.data.NotificationStateCommisioner);
                                if (options.data.NotificationStateCommisioner > 0) {
                                    var ChatContainer = $('<div id="btnChat">');
                                }
                                else {
                                    var ChatContainer = $('<div>');
                                }
                                var EditContainer = $("<div>");


                                container.append(wrapper.append(ChatContainer));

                                ChatContainer.dxButton({
                                    hint: 'Mensajería',
                                    type: "default",
                                    icon: 'glyphicon glyphicon-comment',
                                    width: 50,
                                    onClick: function () {
                                        checkNotificacion(options.data.VisitRegistrationId);
                                        chatModal(options.data.VisitRegistrationId)
                                    }
                                });

                                container.append(wrapper.append(EditContainer));

                                EditContainer.dxButton({
                                    hint: 'Editar',
                                    type: 'default',
                                    icon: 'glyphicon glyphicon-pencil',
                                    width: 50,
                                    onClick: function () {
                                        var url = "@Url.Action("CommisionerEdit","VisitRegistrations")/" + options.data.VisitRegistrationId;
                                        window.location.href = url;
                                    }
                                });

                            }
                        }
                    ]
                });
            });

        });
    }

    function checkNotificacion(data) {
        $.ajax({
            url: '@Url.Action("CheckNotificationCommisioner", "Visitregistrations")',
            type: "POST",
            data: {
                VisitId: data
            }
        })
    }
    
    $("#btn_chat").click(function() {
        var visitSeletedId = $("#visitChatSeletedId").val();
        var messsageText = $("#btn_input").val();
        if (messsageText == "") {
            alert("Error, El mensaje esta en blanco");
        }
        else {

            $.ajax({
                url: '@Url.Action("ChatMessages", "Visitregistrations")',
                type: "POST",
                data: {
                    VisitId: visitSeletedId,
                    Message: messsageText
                }
            }).done(function (response) {

                $("#btn_input").val("");
                chatModalSignalr();

            }).fail(function () {

                alert("Mensaje no enviado, error en la solicitud");
            });
        }
    });

    function cleanMessageBox() {
        var list = document.getElementById("chatBody");

        while (list.hasChildNodes()) {
            list.removeChild(list.firstChild);
        }
    }

    function stateModal(data) {
        $("#StateModal").modal();
        $("#visitSeletedId").val(data);
    }

    function chatModal(data) {

        $("#ChatModal").modal();
        $("#visitChatSeletedId").val(data);

        $.ajax({
            url: '@Url.Action("ChatMessages", "Visitregistrations")',
            type: "GET",
            data: {visitId: data}
        }).done(function (response) {
            var dataMessages = JSON.parse(response);
            cleanMessageBox();
            createChatMessage(dataMessages);
            makeScrollBottom();
        });
    }

    function chatModalSignalr() {
        var data = $("#visitChatSeletedId").val();

        $.ajax({
            url: '@Url.Action("ChatMessages", "Visitregistrations")',
            type: "GET",
            data: {visitId: data}
        }).done(function (response) {
            var dataMessages = JSON.parse(response);
            cleanMessageBox();
            createChatMessage(dataMessages);
            makeScrollBottom();
        });
    }

    function createChatMessage(dataMessages) {

        dataMessages.forEach(loadMessages);
    }

    function loadMessages(item, index)
    {
        var body = document.getElementById("chatBody");

        var liMessage = document.createElement("li");
        liMessage.classList.add("left");
        liMessage.classList.add("clearfix");


        var divGeneral = document.createElement("div");
        divGeneral.classList.add("chat-body");
        divGeneral.classList.add("clearfix");

        var chatHeader = document.createElement("div");
        chatHeader.classList.add("header");

        var messageBody = document.createElement("p");
        var textMessage = document.createTextNode(item["Message"]);
        messageBody.appendChild(textMessage);

        var autorName = document.createElement("strong");
        autorName.classList.add("primary-font");
        var textAutor = document.createTextNode(item["AutorFullName"]);
        autorName.appendChild(textAutor);

        var messageTime = document.createElement("small");
        messageTime.classList.add("pull-right");
        messageTime.classList.add("text-muted");
        var textMessage = document.createTextNode(item["MessageTime"]);
        messageTime.appendChild(textMessage);

        var logoTime = document.createElement("span");
        logoTime.classList.add("glyphicon")
        logoTime.classList.add("glyphicon-time")

        messageTime.appendChild(logoTime)

        chatHeader.appendChild(autorName)
        chatHeader.appendChild(messageTime)

        divGeneral.appendChild(chatHeader)
        divGeneral.appendChild(messageBody)

        liMessage.appendChild(divGeneral)

        body.appendChild(liMessage)
    }
    function makeScrollBottom() {
        $("div.panel-body").scrollTop($("div.panel-body").prop("scrollHeight"));
    }
</script>